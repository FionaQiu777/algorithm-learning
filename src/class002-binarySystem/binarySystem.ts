// 打印一个十进制数字为4位二进制的状态，左侧是高位，右侧是低位
function printBinary(num: number) {
  let res = "";
  for (let i = 3; i >= 0; i--) {
    res += (num & (1 << i)) == 0 ? "0" : "1";
    // 以 num = 2 为例子
    // i = 3
    // 1 << i 是 1 乘以 2 的 i 次  -----> 1 << i = 1 * 2^3 = 8
    //  num & ( 1 <<i )
    //  num -----> 0 0 1 0
    //  1<<i ----> 1 0 0 0
    //  结果为 ---> 0 0 0 0 --> 0
    // (num & (1 << i)) == 0 ? "0" : "1";
    //  结果为 ---> "0"
    //  res = res + "0" --> "0"
    // i = 2
    // 1 << i 是 1 乘以 2 的 i 次  -----> 1 << i = 1 * 2^2 = 4
    //  num & ( 1 <<i )
    //  num -----> 0 0 1 0
    //  1<<i ----> 0 1 0 0
    //  结果为 ---> 0 0 0 0 --> 0
    // (num & (1 << i)) == 0 ? "0" : "1";
    //  结果为 ---> "0"
    //  res = "0" + "0" --> "00"
    // i = 1
    // 1 << i 是 1 乘以 2 的 i 次  -----> 1 << i = 1 * 2^1 = 2
    //  num & ( 1 << i )
    //  num -----> 0 0 1 0
    //  1<<i ----> 0 0 1 0
    //  结果为 ---> 0 0 1 0 --> 1
    // (num & (1 << i)) == 0 ? "0" : "1";
    //  结果为 ---> "1"
    //  res = "00" + "1" --> "001"
    // i = 0
    // 1 << i 是 1 乘以 2 的 i 次  -----> 1 << i = 1 * 2^0 = 1
    //  num & ( 1 << i )
    //  num -----> 0 0 1 0
    //  1<<i ----> 0 0 0 1
    //  结果为 ---> 0 0 0 0 --> 0
    // (num & (1 << i)) == 0 ? "0" : "1";
    //  结果为 ---> "0"
    //  res = "001" + "0" --> "0010"
  }
  return res;
}

const inputNum = +process.argv[2] || 2;
console.log(printBinary(inputNum));
